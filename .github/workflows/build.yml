on:
  push:
    branches:
      - api_chatting
  workflow_dispatch:
  
jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest
    env:
      WORK_DIR: ${{ secrets.WORK_DIR_PROD }}
      HOST: ${{ secrets.SSH_HOST }}
      USER: ${{ secrets.SSH_USER }}
      PROJECT: ${{ secrets.WORK_PROJECT }}
      PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      BRANCH: "api_chatting"
    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # https://stackoverflow.com/a/70447517
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        ssh-keyscan -H $HOST > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh $USER@$HOST "cd $WORK_DIR/$PROJECT && git checkout $BRANCH && git pull && exit"
    - name: active env
      run: |
        ssh $USER@$HOST <<EOF
          cd $WORK_DIR
          python3 -m venv myprojectenv
        EOF
    - name: Deploy Project
      run: |
        ssh $USER@$HOST <<EOF
          cd $WORK_DIR
          python3 -m venv myprojectenv
          source myprojectenv/bin/activate
          cd $PROJECT
          pip uninstall -y channels
          pip uninstall -y daphne
          python -m pip install -U channels["daphne"]
          cd myproject
          docker-compose build
          docker-compose up -d
          
        EOF
        

    - name: cleanup
      run: rm -rf ~/.ssh